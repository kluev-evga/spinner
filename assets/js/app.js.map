{"version":3,"file":"app.js","mappings":"yBAoWA,MApWA,MACGA,YAAYC,EAASC,GAKlBC,KAAKC,MAAQ,IAAIH,EAAQI,UACzBF,KAAKD,QAAUC,KAAKG,YAAYJ,GAEhCC,KAAKI,iBAAmBJ,KAAKK,uBAAuBP,GACpDE,KAAKM,YAAcN,KAAKO,oBACxBP,KAAKQ,YAAcR,KAAKS,oBAExBT,KAAKU,eACLV,KAAKW,YAELX,KAAKY,MAAQ,EAETZ,KAAKD,QAAQc,qBAAqBb,KAAKa,sBAG9CC,OAAOC,EAAKC,GACT,MAAO,CAACD,EAAKC,GAAKC,UAKrBd,YAAYJ,GA+CT,OA9CAA,EAAQmB,OAAmC,iBAAnBnB,EAAQmB,OAAsBnB,EAAQmB,OAAS,IACvEnB,EAAQoB,UACwB,iBAAtBpB,EAAQoB,UAAyBpB,EAAQoB,UAAY,GAE/DpB,EAAQqB,iBAC+B,iBAA7BrB,EAAQqB,iBACVrB,EAAQqB,iBACR,gBACRrB,EAAQqB,iBACqC,IAA1CrB,EAAQqB,iBAAiBC,QAAQ,KAC5BtB,EAAQqB,iBAAiBE,MAAM,GAC/BvB,EAAQqB,iBAEhBrB,EAAQwB,WAAavB,KAAKC,MAAMuB,QAAU,EAAIxB,KAAKC,MAAMuB,OAAS,EAElEzB,EAAQ0B,KAAO,IAAM1B,EAAQwB,WAE7BxB,EAAQ2B,YAAsC,cAAxB3B,EAAQ2B,YAA8B,IAAM,IAElE3B,EAAQ4B,IACL5B,EAAQ4B,KAAO,GAA4B,iBAAhB5B,EAAQ4B,IAAmB5B,EAAQ4B,KAAO,EAGxE5B,EAAQ6B,SACL7B,EAAQmB,QACP,IACG,EAAInB,EAAQ8B,aAAe,EAAK,KAChC,EAAI9B,EAAQwB,YAAc,EAAK,KAGtCxB,EAAQ+B,WACLC,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,GAAKnC,EAAQwB,YAAcxB,EAAQ6B,UAC5D7B,EAAQ4B,IAEiB,MAAxB5B,EAAQ2B,eACR3B,EAAQ+B,WAAY/B,EAAQoB,WAAanB,KAAKc,OAC5Cf,EAAQ+B,WACR/B,EAAQoB,YAGdpB,EAAQ8B,YAC0B,iBAAxB9B,EAAQ8B,YAA2B9B,EAAQ8B,YAAc,KAEnE9B,EAAQoC,aAC2B,iBAAzBpC,EAAQoC,aAA4BpC,EAAQoC,aAAe,EAE9DpC,EAKVM,uBAAuBP,GASpB,OARAA,EAAQsC,MAAMC,QAAW,WAAUrC,KAAKD,QAAQmB,uXAQzCpB,EAGVS,oBACG,MAAMD,EAAcgC,SAASC,cAAc,OAQ3C,OAPAjC,EAAYkC,UAAUC,IAAI,iBAC1BnC,EAAY8B,MAAMC,QAAW,UAASrC,KAAKD,QAAQoB,8DACVnB,KAAKD,QAAQ+B,wIAER9B,KAAKD,QAAQ8B,2EACP7B,KAAKD,QAAQa,YACjEZ,KAAKI,iBAAiBsC,OAAOpC,GACtBA,EAGVG,oBACG,MAAMD,EAAc8B,SAASC,cAAc,OAU3C,OATA/B,EAAYgC,UAAUC,IAAI,iBAC1BjC,EAAY4B,MAAMC,QAAW,uZAO7BrC,KAAKM,YAAYoC,OAAOlC,GACjBA,EAGVE,eACG,MAAMiC,EAAU3C,KACb4C,EAAUD,EAAQ1C,MAClBwB,EAAOkB,EAAQ5C,QAAQ0B,KACvBL,EAAmBuB,EAAQ5C,QAAQqB,iBACnCyB,EAAiBF,EAAQ5C,QAAQ8C,eACjCC,EAAOH,EAAQnC,YACfe,EAAaoB,EAAQ5C,QAAQwB,WAC7BwB,EAASJ,EAAQ5C,QAAQ6B,SAAW,EACpCF,EAAciB,EAAQ5C,QAAQ2B,YAEjC,IAAIsB,EAAkB,EAMtB,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAY0B,IAAK,CAClC,MAAMC,EAAQZ,SAASC,cAAc,OACrCW,EAAMV,UAAUC,IAAIrB,GACpB8B,EAAMR,OAAOE,EAAQK,IACrBC,EAAMd,MAAMC,QAAW,+KAGsBX,KAAesB,oBAAkCD,8DAG9FG,EAAMC,iBAAiB,aAAaC,IACjCA,EAAEC,oBAdLR,EAAkBG,GAAmBvB,EAASuB,GAAmBvB,EAkBjEqB,EAAKJ,OAAOQ,IAMlBvC,YACG,MAAMgC,EAAU3C,KACbD,EAAU4C,EAAQ5C,QAClBuD,EAAYX,EAAQvC,iBACpB0C,EAAOH,EAAQnC,YAEfiB,GADQkB,EAAQ1C,MACT0C,EAAQ5C,QAAQ0B,MACvBC,EAAciB,EAAQ5C,QAAQ2B,YAC9B6B,EAAY,EAAIxB,KAAKyB,KAAK/B,GAAS,GAEtC,IAAIgC,EAAWC,EAAYC,EAE3B,MAAMC,EAAc,SAAUR,GAC3BS,qBAAqB7D,KAAK8D,WAE1BR,EAAUlB,MAAM2B,OAAS,WACzBT,EAAUU,kBAAkBZ,EAAEa,WAE9BX,EAAUH,iBAAiB,cAAee,EAAa,CACpDC,SAAS,EACTC,SAAS,IAGZV,EAAa1D,KAAKY,MAElB+C,EAA0B,MAAhBjC,EAAsB0B,EAAEiB,QAAUjB,EAAEkB,QAG9Cb,EAAYc,KAAKC,OAClBC,KAAKzE,MAEDkE,EAAc,SAAUd,GAC3B,IAAIsB,EACe,MAAhBhD,EAAsB0B,EAAEiB,QAAUV,EAAUA,EAAUP,EAAEkB,QAC3DtE,KAAKY,MAAQ8C,EAAagB,EAAQnB,EAClCT,EAAKV,MAAMuC,UAAa,SAAQjD,KAAe1B,KAAKY,aACrD6D,KAAKzE,MAED4E,EAAY,SAAUxB,GACzBpD,KAAKI,iBAAiBgC,MAAM2B,OAAS,OACrC/D,KAAKI,iBAAiByE,oBAAoB,cAAeX,EAAa,CACnEC,SAAS,EACTC,SAAS,IAIZ,MAAMU,EAAeP,KAAKC,MAAQf,EAG5BsB,GADa,MAAhBrD,EAAsB0B,EAAEiB,QAAUV,EAAUA,EAAUP,EAAEkB,SAC5BQ,EAG/B,IAAIE,EAA0C,IAA/BjD,KAAKkD,KAAKlD,KAAKmD,IAAIH,IAAkB,IAEpD,MAAMI,EAAc,GAAVJ,EAEJrB,EAAa1D,KAAKY,MAGxB,IAAIwE,EAAS,EAETrD,KAAKmD,IAAIC,GAAK1D,EAAO,GACtB2D,GAAU1B,EAAajC,EACvBuD,GAAsB,KAEtBI,EAASD,GAAMzB,EAAayB,GAAK1D,EAIpCzB,KAAKqF,QAAQC,KAAKtF,KAAMgF,EAAUI,EAAQ1B,IAC3Ce,KAAKzE,MAEPsD,EAAUH,iBAAiB,cAAeS,EAAa,CACpDO,SAAS,EACTC,SAAS,IAEZd,EAAUH,iBAAiB,YAAayB,EAAW,CAChDT,SAAS,EACTC,SAAS,IAIZtB,EAAKK,iBAAiB,iBAAiB,KACpC,IAAIO,EAAa6B,WAAWzC,EAAKV,MAAMuC,UAAUrD,MAAM,IAEvD,GADQS,KAAKmD,IAAIxB,EAAa,KACtB,EAAG,CAGR,SAAS8B,IAGN,OAFA9B,EAAa,EAAKA,GAAc,IAAQA,GAAc,IAClD3B,KAAKmD,IAAIxB,GAAc,KAAK8B,IACzB9B,EALVZ,EAAKV,MAAMqD,mBAAqB,GAQhC3C,EAAKV,MAAMuC,UAAa,SAAQjD,KAAe8D,UAE/CE,YAAW,KACR5C,EAAKV,MAAMqD,mBAAqB,cAUzC,IAAIE,EAAQ,EACZrC,EAAUH,iBAAiB,cAAcC,IACtCA,EAAEC,iBAEF,IAAIuC,EAAQxC,EAAEyC,WAMd,GAJI9D,KAAKmD,IAAIU,GAAS,MACnBD,GAASC,GAEZD,EAAQC,EACJ7D,KAAKmD,IAAIS,GAAS,IAAK,OAC3BA,EAAQ,EAERjC,EAAa6B,WAAWzC,EAAKV,MAAMuC,UAAUrD,MAAM,IACnD,IAAIwE,EAASF,EAAQ,EAAIlC,EAAajC,EAAOiC,EAAajC,EAC1DqB,EAAKV,MAAMuC,UAAa,SAAQ5E,EAAQ2B,eAAeoE,WAK7DT,QAAQL,EAAUI,EAAQ1B,GACvB,MAAMqC,EAAQC,YAAYxB,MAEpBa,EAAU,SAAUY,GACvB,IAAIC,GAAgBD,EAAOF,GAASf,EAChCkB,EAAe,IAAGA,EAAe,GAGrC,IAAIC,EAAWpE,KAAKkD,KAAKiB,GAEzBlG,KAAKY,MAAQ8C,EAAayC,EAAWf,EAErCpF,KAAKQ,YAAY4B,MAAMuC,UAAa,SAAQ3E,KAAKD,QAAQ2B,eAAe1B,KAAKY,YAEzEsF,EAAe,GAAGE,sBAAsBf,IAC7CZ,KAAKzE,MAEPA,KAAK8D,UAAYsC,sBAAsBf,GAG1CxE,sBACG,MAAM8B,EAAU3C,KACVsD,EAAYX,EAAQvC,iBACpB0C,EAAOH,EAAQnC,YACfkB,EAAciB,EAAQ5C,QAAQ2B,YAC9BD,EAAOkB,EAAQ5C,QAAQ0B,KAE7B,IA2BI4E,EA3BAC,EAC+B,MAAhC3D,EAAQ5C,QAAQ2B,YAAsB,aAAe,UACpD6E,EAC+B,MAAhC5D,EAAQ5C,QAAQ2B,YAAsB,YAAc,YAEnDiB,EAAQ5C,QAAQyG,mBACZF,iBAAgBC,mBAAoB,CACtCD,eAAgBC,EAChBA,gBAAiBD,IAqBvBhE,SAASa,iBAAiB,WAAWC,IAC9BiD,GAlBP,SAAoBjD,GACjB,GAAIA,EAAEqD,OAASH,EAAgB,CAC5BlD,EAAEC,iBACF,IAAIK,EAAa6B,WAAWzC,EAAKV,MAAMuC,UAAUrD,MAAM,IACvDwB,EAAKV,MAAMuC,UAAa,SAAQjD,KAAegC,EAAajC,QAG/D,GAAI2B,EAAEqD,OAASF,EAAiB,CAC7BnD,EAAEC,iBACF,IAAIK,EAAa6B,WAAWzC,EAAKV,MAAMuC,UAAUrD,MAAM,IACvDwB,EAAKV,MAAMuC,UAAa,SAAQjD,KAAegC,EAAajC,SAQjDiF,CAAWtD,MAGjB,IAAIuD,sBACZ,CAACC,EAASC,KACHD,EAAQ,GAAGE,kBAAoB,KAAKT,GAAW,GAC/CO,EAAQ,GAAGE,kBAAoB,KAAKT,GAAW,KAEtD,CACGU,UAAW,CAAC,EAAG,KACfC,OAAQ,KAGXC,QAAQ3D,KC7VjB,MAAMX,EAAU,IAAIuE,EADX5E,SAAS6E,cAAc,YACA,CAE7B/F,iBAAkB,gBAElBF,OAAQ,IAERC,UAAW,IAEXQ,IAAK,GAELE,YAAa,KAEbjB,MAAO,EAMPuB,aAAc,EAIdtB,qBAAqB,IAIxBuG,QAAQC,IAAI1E,GAEZ,MAAM2E,EAAMhF,SAAS6E,cAAc,aACnC,SAASI,EAAcC,GACpB,IAAIC,EAAW,IAAIC,iBAEnB,IAAK,IAAIzE,EAAI,EAAGA,GAAKuE,EAAOvE,IAAK,CAC9B,IAAI0E,EAAMrF,SAASC,cAAc,OACjCoF,EAAIC,UAAY3E,EAChBwE,EAAS/E,OAAOiF,GAGnB,OAAOF,EAGVH,EAAI5E,OAAO6E,EAAc,KACzB,IAAIL,EAAQI,EAAK,CAEdlG,iBAAkB,gBAElBF,OAAQ,IAERC,UAAW,GAEXQ,IAAK,EAELE,YAAa,KAEbjB,MAAO,EAEPc,YAAa,YAMbmB,gBAAgB,IAMnB,MAAMgF,EAAMvF,SAAS6E,cAAc,aACnCU,EAAInF,OAAO6E,EAAc,MAEzBM,EAAInF,OAAO6E,KACX,IAAIL,EAAQW,EAAK,CAEdzG,iBAAkB,gBAElBF,OAAQ,IAERC,UAAW,GAEXQ,IAAK,EAELE,YAAa,IAEbjB,MAAO,EAMPuB,aAAc,I","sources":["webpack://spinner/./src/assets/js/partials/spinner.js","webpack://spinner/./src/assets/js/app.js"],"sourcesContent":["class Spinner {\n   constructor(element, options) {\n      // <div.container>\n      //     <div.base>\n      //         <div.axis>\n      //              <div..........fasets>\n      this.links = [...element.children]\n      this.options = this.calcOptions(options)\n\n      this.spinnerContainer = this.createSpinnerContainer(element)\n      this.spinnerBase = this.createSpinnerBase()\n      this.spinnerAxis = this.createSpinnerAxis()\n\n      this.createFacets()\n      this.addScroll()\n\n      this.angle = 0\n\n      if (this.options.addScrollOnKeyboard) this.addScrollOnKeyboard()\n   }\n\n   invert(one, two) {\n      return [one, two].reverse()\n   }\n\n   // setup options:\n   // ======================================================================\n   calcOptions(options) {\n      options.height = typeof options.height === 'number' ? options.height : 100\n      options.linkWidth =\n         typeof options.linkWidth === 'number' ? options.linkWidth : 20\n\n      options.spinnerLinkClass =\n         typeof options.spinnerLinkClass === 'string'\n            ? options.spinnerLinkClass\n            : 'spinner__link'\n      options.spinnerLinkClass =\n         options.spinnerLinkClass.indexOf('.') === 0\n            ? options.spinnerLinkClass.slice(1)\n            : options.spinnerLinkClass\n\n      options.linksCount = this.links.length >= 3 ? this.links.length : 3\n\n      options.step = 360 / options.linksCount\n\n      options.orientation = options.orientation === 'landscape' ? 'Y' : 'X'\n\n      options.gap =\n         options.gap > -1 && typeof options.gap === 'number' ? options.gap : -1\n\n      // calc spinner radius:\n      options.diameter =\n         options.height *\n         (0.99 -\n            (1 / options.perspective ** 2) * 28000 -\n            (1 / options.linksCount ** 2) * 3.6)\n\n      // calc spinner link height:\n      options.linkHeight =\n         Math.round(Math.tan(Math.PI / options.linksCount) * options.diameter) -\n         options.gap\n\n      if (options.orientation === 'Y')\n         [options.linkHeight, options.linkWidth] = this.invert(\n            options.linkHeight,\n            options.linkWidth\n         )\n\n      options.perspective =\n         typeof options.perspective === 'number' ? options.perspective : 1500\n\n      options.counterStart =\n         typeof options.counterStart === 'number' ? options.counterStart : 1\n\n      return options\n   } // ------------------------------------------------end of setup options\n\n   // Create spinner \"body\":\n   // ======================================================================\n   createSpinnerContainer(element) {\n      element.style.cssText = `height: ${this.options.height}px;\n                                 width: 600px;\n                                 display: flex;\n                                 align-items: center;\n                                 justify-content: center;\n                                 cursor:grab;\n                                 overflow: hidden;\n                                 touch-action: none`\n      return element\n   }\n\n   createSpinnerBase() {\n      const spinnerBase = document.createElement('div')\n      spinnerBase.classList.add('spinner__base')\n      spinnerBase.style.cssText = `width: ${this.options.linkWidth}px;\n                                     height: ${this.options.linkHeight}px;\n                                     transform-style: preserve-3d;\n                                     perspective: ${this.options.perspective}px;\n                                     transform: rotateY(${this.options.angle}deg)`\n      this.spinnerContainer.append(spinnerBase)\n      return spinnerBase\n   }\n\n   createSpinnerAxis() {\n      const spinnerAxis = document.createElement('div')\n      spinnerAxis.classList.add('spinner__axis')\n      spinnerAxis.style.cssText = `transform-style:preserve-3d;\n                                     width: 100%;\n                                     height: 100%;\n                                     transform: rotateX(0);\n                                     transition-duration: 0.1s;\n                                     transition-property: transform\n                                     transition-timing-function: ease-in-out`\n      this.spinnerBase.append(spinnerAxis)\n      return spinnerAxis\n   }\n\n   createFacets() {\n      const spinner = this,\n         content = spinner.links,\n         step = spinner.options.step,\n         spinnerLinkClass = spinner.options.spinnerLinkClass,\n         reverseContent = spinner.options.reverseContent,\n         axis = spinner.spinnerAxis,\n         linksCount = spinner.options.linksCount,\n         radius = spinner.options.diameter / 2,\n         orientation = spinner.options.orientation\n\n      let angleOfRotation = 0\n\n      function calcNextAngle() {\n         reverseContent ? (angleOfRotation += step) : (angleOfRotation -= step)\n      }\n\n      for (let i = 0; i < linksCount; i++) {\n         const facet = document.createElement('div')\n         facet.classList.add(spinnerLinkClass)\n         facet.append(content[i])\n         facet.style.cssText = `position: absolute;\n                                   width: 100%;\n                                   height: 100%;\n                                   transform: rotate${orientation}(${angleOfRotation}deg) translateZ(${radius}px);\n                                   user-select:none;`\n\n         facet.addEventListener('dragstart', e => {\n            e.preventDefault()\n         })\n\n         calcNextAngle()\n         axis.append(facet)\n      }\n   } //  ---------------------------------------end of create spinner \"body\"\n\n   // add grab & scroll // animation // kinetic:\n   // ======================================================================\n   addScroll() {\n      const spinner = this,\n         options = spinner.options,\n         container = spinner.spinnerContainer,\n         axis = spinner.spinnerAxis,\n         links = spinner.links,\n         step = spinner.options.step,\n         orientation = spinner.options.orientation,\n         modifier = (1 / Math.cbrt(step)) * 0.8\n\n      let startTime, currentPos, zeroPos\n\n      const onMouseDown = function (e) {\n         cancelAnimationFrame(this.animateId)\n\n         container.style.cursor = 'grabbing'\n         container.setPointerCapture(e.pointerId)\n\n         container.addEventListener('pointermove', onMouseDrag, {\n            capture: true,\n            passive: true,\n         })\n\n         currentPos = this.angle\n\n         zeroPos = orientation === 'Y' ? e.clientX : e.clientY\n\n         // kinetic start time:\n         startTime = Date.now()\n      }.bind(this)\n\n      const onMouseDrag = function (e) {\n         let shift =\n            orientation === 'Y' ? e.clientX - zeroPos : zeroPos - e.clientY\n         this.angle = currentPos + shift * modifier\n         axis.style.transform = `rotate${orientation}(${this.angle}deg)`\n      }.bind(this)\n\n      const onMouseUp = function (e) {\n         this.spinnerContainer.style.cursor = 'grab'\n         this.spinnerContainer.removeEventListener('pointermove', onMouseDrag, {\n            capture: true,\n            passive: true,\n         })\n\n         // kinetic:\n         const dragDuration = Date.now() - startTime\n         const dragDistance =\n            orientation === 'Y' ? e.clientX - zeroPos : zeroPos - e.clientY\n         const impulse = dragDistance / dragDuration\n\n         // kinetic - animation duration:\n         let duration = Math.sqrt(Math.abs(impulse)) * 400 + 100\n         // kinetic - animation distance:\n         const d = impulse * 30\n\n         const currentPos = this.angle\n\n         // stopAt = increment...(angle)\n         let stopAt = 0\n\n         if (Math.abs(d) < step / 2) {\n            stopAt = -currentPos % step\n            duration = duration * 1.6\n         } else {\n            stopAt = d - ((currentPos + d) % step)\n         }\n\n         // run slip animation:\n         this.animate.call(this, duration, stopAt, currentPos)\n      }.bind(this)\n\n      container.addEventListener('pointerdown', onMouseDown, {\n         capture: true,\n         passive: true,\n      })\n      container.addEventListener('pointerup', onMouseUp, {\n         capture: true,\n         passive: true,\n      })\n\n      // After animation correction on zero(drop down axis rotate degree below 360 - prevent \"swirl to infinity\"):\n      axis.addEventListener('transitionend', () => {\n         let currentPos = parseFloat(axis.style.transform.slice(8))\n         let a = Math.abs(currentPos / 360)\n         if (a > 1) {\n            axis.style.transitionDuration = ''\n\n            function dropDown() {\n               currentPos > 0 ? (currentPos -= 360) : (currentPos += 360)\n               if (Math.abs(currentPos) > 360) dropDown()\n               return currentPos\n            }\n\n            axis.style.transform = `rotate${orientation}(${dropDown()}deg)`\n\n            setTimeout(() => {\n               axis.style.transitionDuration = '0.1s'\n            })\n         }\n      })\n\n      /////////////////////////////////////////////////////////////////////////////////////////////\n      /////////////////////////////////////////////////////////////////////////////////////////////\n      /////////////////////////////////////////////////////////////////////////////////////////////\n      /////////////////////////////////////////////////////////////////////////////////////////////\n\n      let wheel = 0\n      container.addEventListener('mousewheel', e => {\n         e.preventDefault()\n\n         let delta = e.wheelDelta\n\n         if (Math.abs(delta) < 100) {\n            wheel += delta\n         }\n         wheel = delta\n         if (Math.abs(wheel) < 100) return\n         wheel = 0\n\n         currentPos = parseFloat(axis.style.transform.slice(8))\n         let newPos = delta < 0 ? currentPos - step : currentPos + step\n         axis.style.transform = `rotate${options.orientation}(${newPos}deg)`\n         // console.log(\"deltaY\", e.deltaY, \"wheelDeltaY\", e.wheelDeltaY, \"wheelDelta\", e.wheelDelta);\n      })\n   } //  ------------------------------------------------end add scroll\n\n   animate(duration, stopAt, currentPos) {\n      const start = performance.now()\n\n      const animate = function (time) {\n         let timeFraction = (time - start) / duration\n         if (timeFraction > 1) timeFraction = 1\n\n         // animation timing function:\n         let progress = Math.sqrt(timeFraction)\n\n         this.angle = currentPos + progress * stopAt\n\n         this.spinnerAxis.style.transform = `rotate${this.options.orientation}(${this.angle}deg)`\n\n         if (timeFraction < 1) requestAnimationFrame(animate)\n      }.bind(this)\n\n      this.animateId = requestAnimationFrame(animate)\n   }\n\n   addScrollOnKeyboard() {\n      const spinner = this\n      const container = spinner.spinnerContainer\n      const axis = spinner.spinnerAxis\n      const orientation = spinner.options.orientation\n      const step = spinner.options.step\n\n      let keyCodeForward =\n         spinner.options.orientation === 'Y' ? 'ArrowRight' : 'ArrowUp'\n      let keyCodeBackward =\n         spinner.options.orientation === 'Y' ? 'ArrowLeft' : 'ArrowDown'\n\n      if (spinner.options.reverseControls) {\n         ; ({ keyCodeForward, keyCodeBackward } = {\n            keyCodeForward: keyCodeBackward,\n            keyCodeBackward: keyCodeForward,\n         })\n      }\n\n      function onKeyBoard(e) {\n         if (e.code === keyCodeForward) {\n            e.preventDefault()\n            let currentPos = parseFloat(axis.style.transform.slice(8))\n            axis.style.transform = `rotate${orientation}(${currentPos + step\n               }deg)`\n         }\n         if (e.code === keyCodeBackward) {\n            e.preventDefault()\n            let currentPos = parseFloat(axis.style.transform.slice(8))\n            axis.style.transform = `rotate${orientation}(${currentPos - step\n               }deg)`\n         }\n      }\n\n      let keyboard\n\n      document.addEventListener('keydown', e => {\n         if (keyboard) onKeyBoard(e)\n      })\n\n      const io = new IntersectionObserver(\n         (entries, observer) => {\n            if (entries[0].intersectionRatio > 0.9) keyboard = true\n            if (entries[0].intersectionRatio < 0.9) keyboard = false\n         },\n         {\n            threshold: [0, 0.95],\n            margin: 50,\n         }\n      )\n      io.observe(container)\n   }\n}\n\nexport default Spinner","import Spinner from './partials/spinner'\n\nlet sp = document.querySelector('.spinner')\nconst spinner = new Spinner(sp, {\n   // ------------------------------spinnerLinkClass: (default \"spinner__link\"),\n   spinnerLinkClass: 'spinner__link',\n   // ------------------------------spinner height(default 100):\n   height: 700,\n   // ------------------------------spinner links width(default 20):\n   linkWidth: 250,\n   // ------------------------------gaps between spinner links -1(default) -1.... infinity (do not use too much)\n   gap: 10,\n   // ------------------------------spinner perspective\"bloating\"(1500 default):\n   perspective: 1500,\n   // ------------------------------tilt spinner(0 degree default):\n   angle: 6,\n   // ------------------------------\"landscape\"/(\"portrait\" default):\n   // orientation: \"landscape\",\n   // ------------------------------fill spinner with text content(no content = fill with numbers):\n\n   // ------------------------------start counter from digit(1 default):\n   counterStart: 1,\n   // ------------------------------reverse content counter clock wise(false default):\n   // reverseContent: true,\n\n   addScrollOnKeyboard: true,\n   // reverseControls: true,\n})\n\nconsole.log(spinner)\n\nconst sp1 = document.querySelector('.spinner1')\nfunction createContent(count) {\n   let fragment = new DocumentFragment()\n\n   for (let i = 1; i <= count; i++) {\n      let div = document.createElement('div')\n      div.innerText = i\n      fragment.append(div)\n   }\n\n   return fragment\n}\n\nsp1.append(createContent(30))\nnew Spinner(sp1, {\n   // ------------------------------spinnerLinkClass: (default \"spinner__link\"),\n   spinnerLinkClass: 'spinner__link',\n   // ------------------------------spinner height(default 100):\n   height: 300,\n   // ------------------------------spinner links width(default 20):\n   linkWidth: 80,\n   // ------------------------------gaps between spinner links -1(default) -1.... infinity (do not use too much)\n   gap: 1,\n   // ------------------------------spinner perspective\"bloating\"(1500 default):\n   perspective: 1500,\n   // ------------------------------tilt spinner(0 degree default):\n   angle: 5,\n   // ------------------------------\"landscape\"/(\"portrait\" default):\n   orientation: 'landscape',\n   // ------------------------------fill spinner with text content(no content = fill with numbers):\n\n   // ------------------------------start counter from digit(1 default):\n   // counterStart: 1,\n   // ------------------------------reverse content counter clock wise(false default):\n   reverseContent: true,\n\n   // addScrollOnKeyboard: true,\n   // reverseControls: true,\n})\n\nconst sp2 = document.querySelector('.spinner2')\nsp2.append(createContent(200))\n\nsp2.append(createContent())\nnew Spinner(sp2, {\n   // ------------------------------spinnerLinkClass: (default \"spinner__link\"),\n   spinnerLinkClass: 'spinner__link',\n   // ------------------------------spinner height(default 100):\n   height: 700,\n   // ------------------------------spinner links width(default 20):\n   linkWidth: 30,\n   // ------------------------------gaps between spinner links -1(default) -1.... infinity (do not use too much)\n   gap: 0,\n   // ------------------------------spinner perspective\"bloating\"(1500 default):\n   perspective: 700,\n   // ------------------------------tilt spinner(0 degree default):\n   angle: 0,\n   // ------------------------------\"landscape\"/(\"portrait\" default):\n   // orientation: 'landscape',\n   // ------------------------------fill spinner with text content(no content = fill with numbers):\n\n   // ------------------------------start counter from digit(1 default):\n   counterStart: 1,\n   // ------------------------------reverse content counter clock wise(false default):\n   // reverseContent: true,\n\n   // addScrollOnKeyboard: true,\n   // reverseControls: true,\n})\n"],"names":["constructor","element","options","this","links","children","calcOptions","spinnerContainer","createSpinnerContainer","spinnerBase","createSpinnerBase","spinnerAxis","createSpinnerAxis","createFacets","addScroll","angle","addScrollOnKeyboard","invert","one","two","reverse","height","linkWidth","spinnerLinkClass","indexOf","slice","linksCount","length","step","orientation","gap","diameter","perspective","linkHeight","Math","round","tan","PI","counterStart","style","cssText","document","createElement","classList","add","append","spinner","content","reverseContent","axis","radius","angleOfRotation","i","facet","addEventListener","e","preventDefault","container","modifier","cbrt","startTime","currentPos","zeroPos","onMouseDown","cancelAnimationFrame","animateId","cursor","setPointerCapture","pointerId","onMouseDrag","capture","passive","clientX","clientY","Date","now","bind","shift","transform","onMouseUp","removeEventListener","dragDuration","impulse","duration","sqrt","abs","d","stopAt","animate","call","parseFloat","dropDown","transitionDuration","setTimeout","wheel","delta","wheelDelta","newPos","start","performance","time","timeFraction","progress","requestAnimationFrame","keyboard","keyCodeForward","keyCodeBackward","reverseControls","code","onKeyBoard","IntersectionObserver","entries","observer","intersectionRatio","threshold","margin","observe","Spinner","querySelector","console","log","sp1","createContent","count","fragment","DocumentFragment","div","innerText","sp2"],"sourceRoot":""}